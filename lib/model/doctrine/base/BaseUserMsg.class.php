<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserMsg', 'doctrine-discuss');

/**
 * BaseUserMsg
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $mtype
 * @property string $caption
 * @property string $content
 * @property timestamp $date_create
 * @property timestamp $ts
 * @property integer $user_id
 * @property integer $from_user_id
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method integer   getMtype()        Returns the current record's "mtype" value
 * @method string    getCaption()      Returns the current record's "caption" value
 * @method string    getContent()      Returns the current record's "content" value
 * @method timestamp getDateCreate()   Returns the current record's "date_create" value
 * @method timestamp getTs()           Returns the current record's "ts" value
 * @method integer   getUserId()       Returns the current record's "user_id" value
 * @method integer   getFromUserId()   Returns the current record's "from_user_id" value
 * @method UserMsg   setId()           Sets the current record's "id" value
 * @method UserMsg   setMtype()        Sets the current record's "mtype" value
 * @method UserMsg   setCaption()      Sets the current record's "caption" value
 * @method UserMsg   setContent()      Sets the current record's "content" value
 * @method UserMsg   setDateCreate()   Sets the current record's "date_create" value
 * @method UserMsg   setTs()           Sets the current record's "ts" value
 * @method UserMsg   setUserId()       Sets the current record's "user_id" value
 * @method UserMsg   setFromUserId()   Sets the current record's "from_user_id" value
 * 
 * @package    fb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserMsg extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_msg');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('mtype', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('caption', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('content', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('date_create', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('ts', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('from_user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}