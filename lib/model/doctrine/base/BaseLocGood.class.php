<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LocGood', 'doctrine-geocode');

/**
 * BaseLocGood
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $input
 * @property string $loc
 * @property string $city
 * @property string $state
 * @property string $zip
 * @property string $country
 * @property decimal $lat
 * @property decimal $lon
 * @property decimal $sw_lat
 * @property decimal $sw_lon
 * @property decimal $ne_lat
 * @property decimal $ne_lon
 * @property timestamp $date_create
 * @property timestamp $ts
 * @property string $county
 * @property string $state_full
 * @property string $country_full
 * @property integer $result_count
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method string    getInput()        Returns the current record's "input" value
 * @method string    getLoc()          Returns the current record's "loc" value
 * @method string    getCity()         Returns the current record's "city" value
 * @method string    getState()        Returns the current record's "state" value
 * @method string    getZip()          Returns the current record's "zip" value
 * @method string    getCountry()      Returns the current record's "country" value
 * @method decimal   getLat()          Returns the current record's "lat" value
 * @method decimal   getLon()          Returns the current record's "lon" value
 * @method decimal   getSwLat()        Returns the current record's "sw_lat" value
 * @method decimal   getSwLon()        Returns the current record's "sw_lon" value
 * @method decimal   getNeLat()        Returns the current record's "ne_lat" value
 * @method decimal   getNeLon()        Returns the current record's "ne_lon" value
 * @method timestamp getDateCreate()   Returns the current record's "date_create" value
 * @method timestamp getTs()           Returns the current record's "ts" value
 * @method string    getCounty()       Returns the current record's "county" value
 * @method string    getStateFull()    Returns the current record's "state_full" value
 * @method string    getCountryFull()  Returns the current record's "country_full" value
 * @method integer   getResultCount()  Returns the current record's "result_count" value
 * @method LocGood   setId()           Sets the current record's "id" value
 * @method LocGood   setInput()        Sets the current record's "input" value
 * @method LocGood   setLoc()          Sets the current record's "loc" value
 * @method LocGood   setCity()         Sets the current record's "city" value
 * @method LocGood   setState()        Sets the current record's "state" value
 * @method LocGood   setZip()          Sets the current record's "zip" value
 * @method LocGood   setCountry()      Sets the current record's "country" value
 * @method LocGood   setLat()          Sets the current record's "lat" value
 * @method LocGood   setLon()          Sets the current record's "lon" value
 * @method LocGood   setSwLat()        Sets the current record's "sw_lat" value
 * @method LocGood   setSwLon()        Sets the current record's "sw_lon" value
 * @method LocGood   setNeLat()        Sets the current record's "ne_lat" value
 * @method LocGood   setNeLon()        Sets the current record's "ne_lon" value
 * @method LocGood   setDateCreate()   Sets the current record's "date_create" value
 * @method LocGood   setTs()           Sets the current record's "ts" value
 * @method LocGood   setCounty()       Sets the current record's "county" value
 * @method LocGood   setStateFull()    Sets the current record's "state_full" value
 * @method LocGood   setCountryFull()  Sets the current record's "country_full" value
 * @method LocGood   setResultCount()  Sets the current record's "result_count" value
 * 
 * @package    fb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLocGood extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('loc_good');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('input', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('loc', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('city', 'string', 125, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 125,
             ));
        $this->hasColumn('state', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('zip', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('country', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('lat', 'decimal', 15, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             'scale' => '10',
             ));
        $this->hasColumn('lon', 'decimal', 15, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             'scale' => '10',
             ));
        $this->hasColumn('sw_lat', 'decimal', 15, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             'scale' => '10',
             ));
        $this->hasColumn('sw_lon', 'decimal', 15, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             'scale' => '10',
             ));
        $this->hasColumn('ne_lat', 'decimal', 15, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             'scale' => '10',
             ));
        $this->hasColumn('ne_lon', 'decimal', 15, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             'scale' => '10',
             ));
        $this->hasColumn('date_create', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('ts', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('county', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('state_full', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('country_full', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('result_count', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}