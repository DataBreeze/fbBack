<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CatchByFish', 'doctrine');

/**
 * BaseCatchByFish
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $fish_id
 * @property string $name
 * @property string $name_sci
 * @property integer $rate
 * @property integer $count_fish
 * @property decimal $avg_length
 * @property decimal $avg_weight
 * @property FishNames $FishNames
 * 
 * @method integer     getFishId()     Returns the current record's "fish_id" value
 * @method string      getName()       Returns the current record's "name" value
 * @method string      getNameSci()    Returns the current record's "name_sci" value
 * @method integer     getRate()       Returns the current record's "rate" value
 * @method integer     getCountFish()  Returns the current record's "count_fish" value
 * @method decimal     getAvgLength()  Returns the current record's "avg_length" value
 * @method decimal     getAvgWeight()  Returns the current record's "avg_weight" value
 * @method FishNames   getFishNames()  Returns the current record's "FishNames" value
 * @method CatchByFish setFishId()     Sets the current record's "fish_id" value
 * @method CatchByFish setName()       Sets the current record's "name" value
 * @method CatchByFish setNameSci()    Sets the current record's "name_sci" value
 * @method CatchByFish setRate()       Sets the current record's "rate" value
 * @method CatchByFish setCountFish()  Sets the current record's "count_fish" value
 * @method CatchByFish setAvgLength()  Sets the current record's "avg_length" value
 * @method CatchByFish setAvgWeight()  Sets the current record's "avg_weight" value
 * @method CatchByFish setFishNames()  Sets the current record's "FishNames" value
 * 
 * @package    fb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCatchByFish extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('catch_by_fish');
        $this->hasColumn('fish_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('name_sci', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('rate', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('count_fish', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('avg_length', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '1',
             ));
        $this->hasColumn('avg_weight', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '1',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('FishNames', array(
             'local' => 'fish_id',
             'foreign' => 'fish_id'));
    }
}