<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FishHabitat', 'doctrine');

/**
 * BaseFishHabitat
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $common_name
 * @property string $scientific_name
 * @property string $lifestage
 * @property string $gender
 * @property string $habitat_association
 * @property string $season
 * @property string $level1habitat
 * @property string $level2habitat
 * @property string $level3habitat
 * @property string $level4habitat
 * @property integer $id
 * 
 * @method string      getCommonName()          Returns the current record's "common_name" value
 * @method string      getScientificName()      Returns the current record's "scientific_name" value
 * @method string      getLifestage()           Returns the current record's "lifestage" value
 * @method string      getGender()              Returns the current record's "gender" value
 * @method string      getHabitatAssociation()  Returns the current record's "habitat_association" value
 * @method string      getSeason()              Returns the current record's "season" value
 * @method string      getLevel1habitat()       Returns the current record's "level1habitat" value
 * @method string      getLevel2habitat()       Returns the current record's "level2habitat" value
 * @method string      getLevel3habitat()       Returns the current record's "level3habitat" value
 * @method string      getLevel4habitat()       Returns the current record's "level4habitat" value
 * @method integer     getId()                  Returns the current record's "id" value
 * @method FishHabitat setCommonName()          Sets the current record's "common_name" value
 * @method FishHabitat setScientificName()      Sets the current record's "scientific_name" value
 * @method FishHabitat setLifestage()           Sets the current record's "lifestage" value
 * @method FishHabitat setGender()              Sets the current record's "gender" value
 * @method FishHabitat setHabitatAssociation()  Sets the current record's "habitat_association" value
 * @method FishHabitat setSeason()              Sets the current record's "season" value
 * @method FishHabitat setLevel1habitat()       Sets the current record's "level1habitat" value
 * @method FishHabitat setLevel2habitat()       Sets the current record's "level2habitat" value
 * @method FishHabitat setLevel3habitat()       Sets the current record's "level3habitat" value
 * @method FishHabitat setLevel4habitat()       Sets the current record's "level4habitat" value
 * @method FishHabitat setId()                  Sets the current record's "id" value
 * 
 * @package    fb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFishHabitat extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fish_habitat');
        $this->hasColumn('common_name', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('scientific_name', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('lifestage', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('gender', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('habitat_association', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('season', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('level1habitat', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('level2habitat', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('level3habitat', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('level4habitat', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}