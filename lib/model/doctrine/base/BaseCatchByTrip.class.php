<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CatchByTrip', 'doctrine');

/**
 * BaseCatchByTrip
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $id_code
 * @property date $recdate
 * @property integer $int_site_id
 * @property string $area
 * @property string $area_x
 * @property string $catch
 * @property string $state_fips
 * @property string $county_fips
 * @property string $fish_mode
 * @property string $sp_code
 * @property integer $ctype
 * @property integer $count_s3
 * @property integer $count_s2
 * @property integer $count_fish
 * @property decimal $avg_length
 * @property decimal $avg_weight
 * @property integer $avg_depth
 * 
 * @method integer     getId()          Returns the current record's "id" value
 * @method string      getIdCode()      Returns the current record's "id_code" value
 * @method date        getRecdate()     Returns the current record's "recdate" value
 * @method integer     getIntSiteId()   Returns the current record's "int_site_id" value
 * @method string      getArea()        Returns the current record's "area" value
 * @method string      getAreaX()       Returns the current record's "area_x" value
 * @method string      getCatch()       Returns the current record's "catch" value
 * @method string      getStateFips()   Returns the current record's "state_fips" value
 * @method string      getCountyFips()  Returns the current record's "county_fips" value
 * @method string      getFishMode()    Returns the current record's "fish_mode" value
 * @method string      getSpCode()      Returns the current record's "sp_code" value
 * @method integer     getCtype()       Returns the current record's "ctype" value
 * @method integer     getCountS3()     Returns the current record's "count_s3" value
 * @method integer     getCountS2()     Returns the current record's "count_s2" value
 * @method integer     getCountFish()   Returns the current record's "count_fish" value
 * @method decimal     getAvgLength()   Returns the current record's "avg_length" value
 * @method decimal     getAvgWeight()   Returns the current record's "avg_weight" value
 * @method integer     getAvgDepth()    Returns the current record's "avg_depth" value
 * @method CatchByTrip setId()          Sets the current record's "id" value
 * @method CatchByTrip setIdCode()      Sets the current record's "id_code" value
 * @method CatchByTrip setRecdate()     Sets the current record's "recdate" value
 * @method CatchByTrip setIntSiteId()   Sets the current record's "int_site_id" value
 * @method CatchByTrip setArea()        Sets the current record's "area" value
 * @method CatchByTrip setAreaX()       Sets the current record's "area_x" value
 * @method CatchByTrip setCatch()       Sets the current record's "catch" value
 * @method CatchByTrip setStateFips()   Sets the current record's "state_fips" value
 * @method CatchByTrip setCountyFips()  Sets the current record's "county_fips" value
 * @method CatchByTrip setFishMode()    Sets the current record's "fish_mode" value
 * @method CatchByTrip setSpCode()      Sets the current record's "sp_code" value
 * @method CatchByTrip setCtype()       Sets the current record's "ctype" value
 * @method CatchByTrip setCountS3()     Sets the current record's "count_s3" value
 * @method CatchByTrip setCountS2()     Sets the current record's "count_s2" value
 * @method CatchByTrip setCountFish()   Sets the current record's "count_fish" value
 * @method CatchByTrip setAvgLength()   Sets the current record's "avg_length" value
 * @method CatchByTrip setAvgWeight()   Sets the current record's "avg_weight" value
 * @method CatchByTrip setAvgDepth()    Sets the current record's "avg_depth" value
 * 
 * @package    fb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCatchByTrip extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('catch_by_trip');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('id_code', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('recdate', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('int_site_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('area', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('area_x', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('catch', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('state_fips', 'string', 2, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('county_fips', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('fish_mode', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('sp_code', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('ctype', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('count_s3', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('count_s2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('count_fish', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('avg_length', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '1',
             ));
        $this->hasColumn('avg_weight', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '1',
             ));
        $this->hasColumn('avg_depth', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}