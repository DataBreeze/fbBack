<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserForGroupInvite', 'doctrine-discuss');

/**
 * BaseUserForGroupInvite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $group_id
 * @property string $note
 * @property timestamp $ts
 * 
 * @method integer            getUserId()   Returns the current record's "user_id" value
 * @method integer            getGroupId()  Returns the current record's "group_id" value
 * @method string             getNote()     Returns the current record's "note" value
 * @method timestamp          getTs()       Returns the current record's "ts" value
 * @method UserForGroupInvite setUserId()   Sets the current record's "user_id" value
 * @method UserForGroupInvite setGroupId()  Sets the current record's "group_id" value
 * @method UserForGroupInvite setNote()     Sets the current record's "note" value
 * @method UserForGroupInvite setTs()       Sets the current record's "ts" value
 * 
 * @package    fb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserForGroupInvite extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_for_group_invite');
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('group_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('note', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('ts', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}