<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CatchByDayOfYear', 'doctrine');

/**
 * BaseCatchByDayOfYear
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $day_of_year
 * @property string $sp_code
 * @property integer $int_site_id
 * @property integer $ctype
 * @property integer $count_s3
 * @property integer $count_s2
 * @property integer $count_fish
 * @property decimal $avg_length
 * @property decimal $avg_weight
 * @property integer $avg_depth
 * 
 * @method integer          getId()          Returns the current record's "id" value
 * @method integer          getDayOfYear()   Returns the current record's "day_of_year" value
 * @method string           getSpCode()      Returns the current record's "sp_code" value
 * @method integer          getIntSiteId()   Returns the current record's "int_site_id" value
 * @method integer          getCtype()       Returns the current record's "ctype" value
 * @method integer          getCountS3()     Returns the current record's "count_s3" value
 * @method integer          getCountS2()     Returns the current record's "count_s2" value
 * @method integer          getCountFish()   Returns the current record's "count_fish" value
 * @method decimal          getAvgLength()   Returns the current record's "avg_length" value
 * @method decimal          getAvgWeight()   Returns the current record's "avg_weight" value
 * @method integer          getAvgDepth()    Returns the current record's "avg_depth" value
 * @method CatchByDayOfYear setId()          Sets the current record's "id" value
 * @method CatchByDayOfYear setDayOfYear()   Sets the current record's "day_of_year" value
 * @method CatchByDayOfYear setSpCode()      Sets the current record's "sp_code" value
 * @method CatchByDayOfYear setIntSiteId()   Sets the current record's "int_site_id" value
 * @method CatchByDayOfYear setCtype()       Sets the current record's "ctype" value
 * @method CatchByDayOfYear setCountS3()     Sets the current record's "count_s3" value
 * @method CatchByDayOfYear setCountS2()     Sets the current record's "count_s2" value
 * @method CatchByDayOfYear setCountFish()   Sets the current record's "count_fish" value
 * @method CatchByDayOfYear setAvgLength()   Sets the current record's "avg_length" value
 * @method CatchByDayOfYear setAvgWeight()   Sets the current record's "avg_weight" value
 * @method CatchByDayOfYear setAvgDepth()    Sets the current record's "avg_depth" value
 * 
 * @package    fb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCatchByDayOfYear extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('catch_by_day_of_year');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('day_of_year', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('sp_code', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('int_site_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ctype', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('count_s3', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('count_s2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('count_fish', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('avg_length', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '1',
             ));
        $this->hasColumn('avg_weight', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '1',
             ));
        $this->hasColumn('avg_depth', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}