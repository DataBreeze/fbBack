<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CatchByMonth', 'doctrine');

/**
 * BaseCatchByMonth
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cmonth
 * @property integer $fish_id
 * @property integer $int_site_id
 * @property integer $count_s3
 * @property integer $count_fish
 * @property decimal $avg_length
 * @property decimal $avg_weight
 * @property integer $avg_depth
 * @property decimal $lat
 * @property decimal $lon
 * @property Site $Site
 * @property FishSpecies $FishSpecies
 * 
 * @method integer      getId()          Returns the current record's "id" value
 * @method integer      getCmonth()      Returns the current record's "cmonth" value
 * @method integer      getFishId()      Returns the current record's "fish_id" value
 * @method integer      getIntSiteId()   Returns the current record's "int_site_id" value
 * @method integer      getCountS3()     Returns the current record's "count_s3" value
 * @method integer      getCountFish()   Returns the current record's "count_fish" value
 * @method decimal      getAvgLength()   Returns the current record's "avg_length" value
 * @method decimal      getAvgWeight()   Returns the current record's "avg_weight" value
 * @method integer      getAvgDepth()    Returns the current record's "avg_depth" value
 * @method decimal      getLat()         Returns the current record's "lat" value
 * @method decimal      getLon()         Returns the current record's "lon" value
 * @method Site         getSite()        Returns the current record's "Site" value
 * @method FishSpecies  getFishSpecies() Returns the current record's "FishSpecies" value
 * @method CatchByMonth setId()          Sets the current record's "id" value
 * @method CatchByMonth setCmonth()      Sets the current record's "cmonth" value
 * @method CatchByMonth setFishId()      Sets the current record's "fish_id" value
 * @method CatchByMonth setIntSiteId()   Sets the current record's "int_site_id" value
 * @method CatchByMonth setCountS3()     Sets the current record's "count_s3" value
 * @method CatchByMonth setCountFish()   Sets the current record's "count_fish" value
 * @method CatchByMonth setAvgLength()   Sets the current record's "avg_length" value
 * @method CatchByMonth setAvgWeight()   Sets the current record's "avg_weight" value
 * @method CatchByMonth setAvgDepth()    Sets the current record's "avg_depth" value
 * @method CatchByMonth setLat()         Sets the current record's "lat" value
 * @method CatchByMonth setLon()         Sets the current record's "lon" value
 * @method CatchByMonth setSite()        Sets the current record's "Site" value
 * @method CatchByMonth setFishSpecies() Sets the current record's "FishSpecies" value
 * 
 * @package    fb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCatchByMonth extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('catch_by_month');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cmonth', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fish_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('int_site_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('count_s3', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('count_fish', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('avg_length', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '1',
             ));
        $this->hasColumn('avg_weight', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '1',
             ));
        $this->hasColumn('avg_depth', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('lat', 'decimal', 12, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 12,
             'scale' => '8',
             ));
        $this->hasColumn('lon', 'decimal', 12, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 12,
             'scale' => '8',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Site', array(
             'local' => 'int_site_id',
             'foreign' => 'id'));

        $this->hasOne('FishSpecies', array(
             'local' => 'fish_id',
             'foreign' => 'id'));
    }
}