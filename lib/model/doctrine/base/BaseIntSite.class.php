<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('IntSite', 'doctrine');

/**
 * BaseIntSite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $site_id
 * @property string $name
 * @property string $city
 * @property string $state_fips
 * @property string $county_fips
 * @property string $county
 * @property string $access
 * @property string $disable
 * @property string $fee
 * @property string $night
 * @property decimal $lat
 * @property decimal $lon
 * @property string $state
 * @property string $address
 * @property string $zip
 * @property string $description
 * @property string $description2
 * @property string $directions
 * @property string $latdeg
 * @property string $londeg
 * @property string $latmin
 * @property string $lonmin
 * @property decimal $nlat
 * @property decimal $nlon
 * @property integer $geochange
 * 
 * @method integer getId()           Returns the current record's "id" value
 * @method string  getSiteId()       Returns the current record's "site_id" value
 * @method string  getName()         Returns the current record's "name" value
 * @method string  getCity()         Returns the current record's "city" value
 * @method string  getStateFips()    Returns the current record's "state_fips" value
 * @method string  getCountyFips()   Returns the current record's "county_fips" value
 * @method string  getCounty()       Returns the current record's "county" value
 * @method string  getAccess()       Returns the current record's "access" value
 * @method string  getDisable()      Returns the current record's "disable" value
 * @method string  getFee()          Returns the current record's "fee" value
 * @method string  getNight()        Returns the current record's "night" value
 * @method decimal getLat()          Returns the current record's "lat" value
 * @method decimal getLon()          Returns the current record's "lon" value
 * @method string  getState()        Returns the current record's "state" value
 * @method string  getAddress()      Returns the current record's "address" value
 * @method string  getZip()          Returns the current record's "zip" value
 * @method string  getDescription()  Returns the current record's "description" value
 * @method string  getDescription2() Returns the current record's "description2" value
 * @method string  getDirections()   Returns the current record's "directions" value
 * @method string  getLatdeg()       Returns the current record's "latdeg" value
 * @method string  getLondeg()       Returns the current record's "londeg" value
 * @method string  getLatmin()       Returns the current record's "latmin" value
 * @method string  getLonmin()       Returns the current record's "lonmin" value
 * @method decimal getNlat()         Returns the current record's "nlat" value
 * @method decimal getNlon()         Returns the current record's "nlon" value
 * @method integer getGeochange()    Returns the current record's "geochange" value
 * @method IntSite setId()           Sets the current record's "id" value
 * @method IntSite setSiteId()       Sets the current record's "site_id" value
 * @method IntSite setName()         Sets the current record's "name" value
 * @method IntSite setCity()         Sets the current record's "city" value
 * @method IntSite setStateFips()    Sets the current record's "state_fips" value
 * @method IntSite setCountyFips()   Sets the current record's "county_fips" value
 * @method IntSite setCounty()       Sets the current record's "county" value
 * @method IntSite setAccess()       Sets the current record's "access" value
 * @method IntSite setDisable()      Sets the current record's "disable" value
 * @method IntSite setFee()          Sets the current record's "fee" value
 * @method IntSite setNight()        Sets the current record's "night" value
 * @method IntSite setLat()          Sets the current record's "lat" value
 * @method IntSite setLon()          Sets the current record's "lon" value
 * @method IntSite setState()        Sets the current record's "state" value
 * @method IntSite setAddress()      Sets the current record's "address" value
 * @method IntSite setZip()          Sets the current record's "zip" value
 * @method IntSite setDescription()  Sets the current record's "description" value
 * @method IntSite setDescription2() Sets the current record's "description2" value
 * @method IntSite setDirections()   Sets the current record's "directions" value
 * @method IntSite setLatdeg()       Sets the current record's "latdeg" value
 * @method IntSite setLondeg()       Sets the current record's "londeg" value
 * @method IntSite setLatmin()       Sets the current record's "latmin" value
 * @method IntSite setLonmin()       Sets the current record's "lonmin" value
 * @method IntSite setNlat()         Sets the current record's "nlat" value
 * @method IntSite setNlon()         Sets the current record's "nlon" value
 * @method IntSite setGeochange()    Sets the current record's "geochange" value
 * 
 * @package    fb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIntSite extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('int_site');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('site_id', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('name', 'string', 125, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 125,
             ));
        $this->hasColumn('city', 'string', 125, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 125,
             ));
        $this->hasColumn('state_fips', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('county_fips', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('county', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('access', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('disable', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('fee', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('night', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('lat', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             'scale' => '12',
             ));
        $this->hasColumn('lon', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             'scale' => '12',
             ));
        $this->hasColumn('state', 'string', 2, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('address', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('zip', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('description2', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('directions', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('latdeg', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('londeg', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('latmin', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('lonmin', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('nlat', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             'scale' => '12',
             ));
        $this->hasColumn('nlon', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             'scale' => '12',
             ));
        $this->hasColumn('geochange', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}