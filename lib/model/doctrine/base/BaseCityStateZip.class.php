<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CityStateZip', 'doctrine-discuss');

/**
 * BaseCityStateZip
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $zip
 * @property decimal $lat
 * @property decimal $lon
 * @property string $city
 * @property string $state
 * @property string $county
 * @property string $state_full
 * 
 * @method integer      getId()         Returns the current record's "id" value
 * @method string       getZip()        Returns the current record's "zip" value
 * @method decimal      getLat()        Returns the current record's "lat" value
 * @method decimal      getLon()        Returns the current record's "lon" value
 * @method string       getCity()       Returns the current record's "city" value
 * @method string       getState()      Returns the current record's "state" value
 * @method string       getCounty()     Returns the current record's "county" value
 * @method string       getStateFull()  Returns the current record's "state_full" value
 * @method CityStateZip setId()         Sets the current record's "id" value
 * @method CityStateZip setZip()        Sets the current record's "zip" value
 * @method CityStateZip setLat()        Sets the current record's "lat" value
 * @method CityStateZip setLon()        Sets the current record's "lon" value
 * @method CityStateZip setCity()       Sets the current record's "city" value
 * @method CityStateZip setState()      Sets the current record's "state" value
 * @method CityStateZip setCounty()     Sets the current record's "county" value
 * @method CityStateZip setStateFull()  Sets the current record's "state_full" value
 * 
 * @package    fb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCityStateZip extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('city_state_zip');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('zip', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('lat', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             'scale' => '12',
             ));
        $this->hasColumn('lon', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             'scale' => '12',
             ));
        $this->hasColumn('city', 'string', 125, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 125,
             ));
        $this->hasColumn('state', 'string', 2, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('county', 'string', 125, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 125,
             ));
        $this->hasColumn('state_full', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}