<?php

/**
 * CatchByFishStateTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CatchByFishStateTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CatchByFishStateTable
     */
    public static function getInstance(){
      return Doctrine_Core::getTable('CatchByFishState');
    }
    
    public function fishByState($state,$limit = 50){
      $q = Doctrine_Query::create()
	->select('c.count_fish,c.fish_id,c.name,c.name_sci,c.rate,c.count_fish,c.avg_weight,c.avg_length')
	->from('CatchByFishState c')
	->where('c.state = ?',$state)
	->orderBy('count_fish DESC')
	->limit($limit);
      $rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
      $ret = array();
      foreach($rows as $i => $row){
	$ret[$i]['fish_id'] = intval($row['c_fish_id']);
	$ret[$i]['name'] = $row['c_name'];
	$ret[$i]['name_sci'] = $row['c_name_sci'];
	$ret[$i]['count'] = intval($row['c_count_fish']);
	$ret[$i]['rate'] = intval($row['c_rate']);
	$ret[$i]['class'] = 'tc5';
      }
      return $ret;
    }    

    public function fishByStateCount($state){
      $q = Doctrine_Query::create()
	->select('COUNT(*) AS fish_count')
	->from('CatchByFishState c')
	->where('c.state = ?',$state);
      $rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
      return intval($rows[0]['c_fish_count']);
    }
    
    public function fishByState2($p){
      if( ! $p['limit']){
	$p['limit'] = 100;
      }
      if( ! $p['offset']){
	$p['offset'] = 0;
      }
      $count = $this->fishByStateCount($p['state']);
      $recs = array();
      $ret = array('count_total' => $count, 'count' => 0, 'records' => $recs,
		   'record_offset' => intval($p['offset']),
		   'record_limit' => $limit);
      if($count){
	$q = Doctrine_Query::create()
	  ->select('c.count_fish,c.fish_id,c.name,c.name_sci,c.rate,c.count_fish,c.avg_weight,c.avg_length')
	  ->from('CatchByFishState c')
	  ->where('c.state = ?',$p['state'])
	  ->orderBy('count_fish DESC');
	if($p['offset'] > 0){
	  $q->limit( (1 + $p['offset']) * $p['limit']);
	}else{
	  $q->limit($p['limit']);
	}
	$rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
	foreach($rows as $i => $row){
	  $recs[$i]['fish_id'] = intval($row['c_fish_id']);
	  $recs[$i]['name'] = $row['c_name'];
	  $recs[$i]['name_sci'] = $row['c_name_sci'];
	  $recs[$i]['count'] = intval($row['c_count_fish']);
	  $recs[$i]['rate'] = intval($row['c_rate']);
	  $recs[$i]['class'] = 'tc5';
	}
	$ret['count'] = count($recs);
	$ret['records'] = $recs;
      }
      return $ret;
    }
    
}