<?php

  /**
   * PromoSentTable
   * This class has been auto-generated by the Doctrine ORM Framework
   */

class PromoSentTable extends Doctrine_Table{
  
    public static function getInstance(){
      return Doctrine_Core::getTable('PromoSent');
    }
    
    public function newSent($p){
      $sent = new PromoSent;
      $sent->setPid($p['pid']);
      $sent->setUserId($p['user_id']);
      $sent->setStatus(1);
      $sent->setPromoUserId($p['promo_user_id']);
      $sent->setDateCreate(new Doctrine_Expression('NOW()'));
      $sent->save();
      $sent_id = $sent->getId();
      return $this->getRec($sent_id);
    }
  
    public function updateSent($p){
      if($sent = $this->find($p['id']) ){
	$sent->setCode($p['code']);
	$sent->setStatus($p['status']);
	$sent->save();
	$sent_id = $sent->getId();
	return $this->getRec($sent_id);
      }
      return false;
    }

    public function updateStatus($p){
      if($sent = $this->find($p['id']) ){
	$sent->setStatus($p['status']);
	$sent->save();
	$sent_id = $sent->getId();
	return $this->getRec($sent_id);
      }
      return false;
    }
  
    private function sqlSelect(){
      return 's.id,s.pid,s.promo_user_id,s.user_id,s.status,s.code,DATE_FORMAT(s.date_create,\'%c/%e/%y\') AS date_create,u.username,u.firstname,u.lastname,u.email,p.caption,p.email_from,p.name_from,p.title_from,p.subject';
    }
    
    private function sqlRow($row){
      $rec = array();
      $rec['id'] = intval($row['s_id']);
      $rec['pid'] = intval($row['s_pid']);
      $rec['user_id'] = intval($row['s_user_id']);
      $rec['promo_user_id'] = intval($row['s_promo_user_id']);
      $rec['date_create'] = $row['s_date_create'];
      $rec['status'] = intval($row['s_status']);
      $rec['code'] = $row['s_code'];
      $rec['username'] = $row['u_username'];
      $rec['caption'] = $row['p_caption'];
      $rec['email_from'] = $row['p_email_from'];
      $rec['name_from'] = $row['p_name_from'];
      $rec['title_from'] = $row['p_title_from'];
      $rec['subject'] = $row['p_subject'];
      if($rec['promo_user_id']){
	if($user = Doctrine_Core::getTable('User')->adminById($rec['promo_user_id'])){
	  $rec['promo_username'] = $user['username'];
	  $rec['promo_email'] = $user['email'];
	  if($user['firstname'] and $user['lastname']){
	    $rec['promo_name'] = $user['firstname'] .' '. $user['lastname'];
	  }
	  $rec['promo_email'] = $user['email'];
	}
      }
      $rec['status_text'] = 'NOT sent';
      if($rec['status'] == 5){
	$rec['status_text'] = 'Sent';
      }
      return $rec;
    }
    
    public function getRec($sent_id){
      $q = Doctrine_Query::create()
	->select($this->sqlSelect())
	->from('PromoSent s')
	->innerJoin('s.User u')
	->innerJoin('s.Promo p')
	->where('s.id = ?', $sent_id);
      $rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
      $row = $rows[0];
      if($row){
	$rec = $this->sqlRow($row);
	return $rec;
      }
      return False;
    }
    
    public function delete($sent_id){
      if($sent_id){
	$q = Doctrine_Query::create()
	  ->delete()
	  ->from('PromoSent s')
	  ->where('s.id = ?', $sent_id)
	  ->execute();
	return True;
      }
      return False;
    }
    
    ## note the 'ON' in the inner join -  it ovverrides the auto join
    public function priorByEmail($p){
      $email = $p['promo_email'];
      $pid = $p['pid'];
      if($email and $pid){
	$q = Doctrine_Query::create()
	  ->select($this->sqlSelect())
	  ->from('PromoSent s')
	  ->innerJoin('s.User u')
	  ->innerJoin('s.User u2 ON s.promo_user_id = u2.id')
	  ->innerJoin('s.Promo p')
	  ->where('u2.email = ?', $email)
	  ->andWhere('s.pid = ?',$pid)
	  ->andWhere('s.status = 5');
	$rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
	if($rows and ($row = $rows[0]) ){
	  $rec = $this->sqlRow($row);
	  return $rec;
	}
      }
      return False;
    }
    
    ## note the 'ON' in the inner join -  it ovverrides the auto join
    public function sentByUserAndCode($p){
      if($p['promo_user_id'] and $p['code']){
	$q = Doctrine_Query::create()
	  ->select($this->sqlSelect())
	  ->from('PromoSent s')
	  ->innerJoin('s.User u')
	  ->innerJoin('s.Promo p')
	  ->where('s.promo_user_id = ?', $p['promo_user_id'])
	  ->andWhere('s.status = 5')
	  ->andWhere('s.code = ?',$p['code']);
	$rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
	if($rows and ($row = $rows[0])){
	  $rec = $this->sqlRow($row);
	  return $rec;
	}
      }
      return False;
    }
    
    public function getAllCount(){
      $q = Doctrine_Query::create()
	->select('COUNT(*) AS sent_count')
	->from('PromoSent s')
	->innerJoin('s.Promo p')
	->innerJoin('s.User u');
      $rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
      return intval($rows[0]['s_sent_count']);
    }
    
    public function getAll($p){
      $p['limit'] = ($p['limit'] ? $p['limit'] : 100);
      $p['offset'] = ($p['offset'] ? $p['offset'] : 0);
      $count = $this->getAllCount();
      $recs = array();
      $ret = array('count_total' => $count, 'count' => 0, 'records' => $recs,
		   'record_offset' => intval($p['offset']),'record_limit' => $p['limit']);
      if($p['pid']){
	$q = Doctrine_Query::create()
	  ->select($this->sqlSelect())
	  ->from('PromoSent s')
	  ->innerJoin('s.Promo p')
	  ->innerJoin('s.User u')
	  ->limit($limit);
	$rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
	if($rows){
	  foreach($rows as $i => $row){
	    $recs[$i] = $this->sqlRow($row);
	  }
	  $ret['records'] = $recs;
	  $ret['count'] = count($recs);
	}
      }
      return $ret;
    }
    
    public function getAllByParentCount($pid){
      $q = Doctrine_Query::create()
	->select('COUNT(*) AS sent_count')
	->from('PromoSent s')
	->innerJoin('s.User u')
	->innerJoin('s.Promo p')
	->where('s.pid = ?',$pid);
      $rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
      return intval($rows[0]['s_sent_count']);
    }
    
    public function getAllByParent($p){
      $p['limit'] = ($p['limit'] ? $p['limit'] : 100);
      $p['offset'] = ($p['offset'] ? $p['offset'] : 0);
      $count = $this->getAllByParentCount($p['pid']);
      $recs = array();
      $ret = array('count_total' => $count, 'count' => 0, 'records' => $recs,
		   'record_offset' => intval($p['offset']),'record_limit' => $p['limit']);
      if($p['pid']){
	$q = Doctrine_Query::create()
	  ->select($this->sqlSelect())
	  ->from('PromoSent s')
	  ->innerJoin('s.User u')
	  ->innerJoin('s.Promo p')
	  ->where('s.pid = ?',$p['pid'])
	  ->limit($p['limit']);
	$rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
	if($rows){
	  foreach($rows as $i => $row){
	    $recs[$i] = $this->sqlRow($row);
	  }
	  $ret['records'] = $recs;
	  $ret['count'] = count($recs);
	}
      }
      return $ret;
    }
    
    public function getAllByUserCount($pid){
      $q = Doctrine_Query::create()
	->select('COUNT(*) AS sent_count')
	->from('PromoSent s')
	->innerJoin('s.User u')
	->innerJoin('s.Promo p')
	->where('s.promo_user_id = ?',$pid);
      $rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
      return intval($rows[0]['s_sent_count']);
    }
    
    public function getAllByUser($p){
      $p['limit'] = ($p['limit'] ? $p['limit'] : 100);
      $p['offset'] = ($p['offset'] ? $p['offset'] : 0);
      $count = $this->getAllByUserCount($p['promo_user_id']);
      $recs = array();
      $ret = array('count_total' => $count, 'count' => 0, 'records' => $recs,
		   'record_offset' => intval($p['offset']),'record_limit' => $p['limit']);
      if($p['pid']){
	$q = Doctrine_Query::create()
	  ->select($this->sqlSelect())
	  ->from('PromoSent s')
	  ->innerJoin('s.User u')
	  ->innerJoin('s.Promo p')
	  ->where('s.promo_user_id = ?',$p['promo_user_id'])
	  ->limit($p['limit']);
	$rows = $q->execute(array(),Doctrine_Core::HYDRATE_SCALAR);
	if($rows){
	  foreach($rows as $i => $row){
	    $recs[$i] = $this->sqlRow($row);
	  }
	  $ret['records'] = $recs;
	  $ret['count'] = count($recs);
	}
      }
      return $ret;
    }
    
}
